config:
  # routes under this wildcard domain are handled by pomerium
  rootDomain: example.info
  generateTLS: true
  generateSigningKey: true
  insecure: true
  insecureProxy: true
  routes:
    - from: http://grafana.example.info
      to: http://prometheus-grafana.default.svc.cluster.local
      allow_any_authenticated_user: true

authenticate:
  name: authenticate
  idp:
    provider: oidc
    clientID: '8723ca4a529764e953df96d32296cb59b9357f339cdcebd1694559e27f512fd6'
    clientSecret: 'gloas-d15aa5ab509ea08841b6c9d4a0419244a667675cdcde9e9ae56e9f9690680329'
    # clientID: '34ab017c7ca69e4367023d5cf210d5071597311db8be5d19663d2d2d38fd7209'
    # clientSecret: 'gloas-f0e2d19d864468e20f4b919147a81aa3fdbd073a7d1906269e47911aab830495'
    url: 'http://gitlab.example.info'
    scopes: 'openid,profile,email'
  service:
    type: LoadBalancer
    nodePort: 31888
  proxied: true

# authorize:
#   deployment:
#     extraEnv: {}

# databroker:
#   service:
#     type: ClusterIP

proxy:
  service:
    type: LoadBalancer

ingress:
  enabled: false
  # secret:
  #   name: 'pomerium-wildcard-tls'


resources:
  limits:
    cpu: 1
    memory: 600Mi
  requests:
    cpu: 100m
    memory: 300Mi

extraEnv:
  AUTHENTICATE_INTERNAL_SERVICE_URL: http://pomerium-authenticate.default.svc.cluster.local
