env:
  database: "postgres"
  headers: "off"
  trusted_ips: 0.0.0.0/0
  real_ip_header: X-Forwarded-For
  real_ip_recursive: "on"
  nginx_http_log_format: x_custom_format escape=json '{"time_local":"$time_iso8601","remote_addr":"$remote_addr","server_addr":"$server_addr","scheme":"$scheme","host":"$host","status":$status,"request_method":"$request_method","uri":"$uri","query_string":"$query_string","server_protocol":"$server_protocol","bytes_sent":$bytes_sent,"body_bytes_sent":$body_bytes_sent,"request_length":$request_length,"http_referrer":"$http_referer","http_user_agent":"$http_user_agent","request_time":$request_time,"upstream_response_time":$upstream_response_time,"upstream_addr":"$upstream_addr","http_content_type":"$sent_http_content_type","upstream_host":"$upstream_host","request":"$request","x_forwarded_for":"$http_x_forwarded_for"}'
proxy:
  type: NodePort
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/group.name: "ingress-external"
      alb.ingress.kubernetes.io/scheme: "internet-facing"
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/healthcheck-path: "/status"
      alb.ingress.kubernetes.io/healthcheck-port: 8100
    hostname: localhost
postgresql:
  enabled: true
  auth:
    username: kong
    database: kong
    passowrd: 4c2e7372e8c10d9cd2284d73dee6892fe8e83315
    postgresPassword: 4c2e7372e8c10d9cd2284d73dee6892fe8e83315
  primary:
    persistence:
      storageClass: "standard"
readinessProbe:
  httpGet:
    path: "/status"
