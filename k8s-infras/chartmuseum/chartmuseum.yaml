env:
  open:
    # storage backend, can be one of: local, alibaba, amazon, google, microsoft, oracle
    STORAGE: local
    # oss bucket to store charts for alibaba storage backend
    STORAGE_ALIBABA_BUCKET:
    # prefix to store charts for alibaba storage backend
    STORAGE_ALIBABA_PREFIX:
    # oss endpoint to store charts for alibaba storage backend
    STORAGE_ALIBABA_ENDPOINT:
    # server side encryption algorithm for alibaba storage backend, can be one
    # of: AES256 or KMS
    STORAGE_ALIBABA_SSE:
    # s3 bucket to store charts for amazon storage backend
    STORAGE_AMAZON_BUCKET:
    # prefix to store charts for amazon storage backend
    STORAGE_AMAZON_PREFIX:
    # region of s3 bucket to store charts
    STORAGE_AMAZON_REGION:
    # alternative s3 endpoint
    STORAGE_AMAZON_ENDPOINT:
    # server side encryption algorithm
    STORAGE_AMAZON_SSE:
    # form field which will be queried for the chart file content
    CHART_POST_FORM_FIELD_NAME: chart
    # form field which will be queried for the provenance file content
    PROV_POST_FORM_FIELD_NAME: prov
    # show debug messages
    DEBUG: true
    # disable all routes prefixed with /api
    DISABLE_API: false
  secret:
    # username for basic http authentication
    BASIC_AUTH_USER: zerak24
    # password for basic http authentication
    BASIC_AUTH_PASS: 7b9f6844ef1ccf4d23f34ef16490746e78883838
service:
  type: NodePort
serviceAccount:
  create: true
  name: "chart-museum"
  annotations: {}
    # eks.amazonaws.com/role-arn: xxxx
ingress:
  enabled: true
  pathType: "ImplementationSpecific"
  # annotations:
  #   kubernetes.io/ingress.class: alb
  #   alb.ingress.kubernetes.io/group.name: "ingress-external"
  #   alb.ingress.kubernetes.io/scheme: "internet-facing"
  #   alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
  hosts:
    - name: charts.example.info
      path: /
