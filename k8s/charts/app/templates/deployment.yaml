apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  namespace: {{ .Values.general.namespace }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "app.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if hasKey .Values.image "repository" }}
          image: "{{ printf "%s/%s:%s" .Values.image.repository .Values.image.image .Values.image.tag }}"
          {{- else }}
          image: "{{ printf "%s:%s" .Values.image.image .Values.image.tag }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          tty: true
          {{- if hasKey .Values "startCommand" }}
          command: {{ .Values.startCommand.command }}
          args: {{ .Values.startCommand.args }}
          {{- end }}
          {{- if hasKey .Values "env" }}
          env:
            {{- range $key, $val := $.Values.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.containerPort }}
              protocol: TCP
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if not $.Values.no_healthcheck }}
          livenessProbe:
            {{- if hasKey $.Values.livenessProbe "initialDelaySeconds" }}
            initialDelaySeconds: {{ $.Values.livenessProbe.initialDelaySeconds }}
            {{- end }}
            {{- if hasKey $.Values.livenessProbe "periodSeconds" }}
            periodSeconds: {{ $.Values.livenessProbe.periodSeconds }}
            {{- end }}
            httpGet:
              path: {{ .Values.health.live | default "/health" }}
              port: {{ .Values.service.name | default "http" }}
              scheme: {{ .Values.service.scheme | default "HTTP" }}
          readinessProbe:
            {{- if hasKey $.Values.readinessProbe "initialDelaySeconds" }}
            initialDelaySeconds: {{ $.Values.readinessProbe.initialDelaySeconds }}
            {{- end }}
            {{- if hasKey $.Values.readinessProbe "periodSeconds" }}
            periodSeconds: {{ $.Values.readinessProbe.periodSeconds }}
            {{- end }}
            httpGet:
              path: {{ .Values.health.ready | default "/health" }}
              port: {{ .Values.service.name | default "http" }}
              scheme: {{ .Values.service.scheme | default "HTTP" }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
