general:
  namespace: default

image:
  # repository: something
  image: apptest
  tag: v1
  pullPolicy: IfNotPresent

cronjobs:
  - name: run-something
    schedule: '* 12 * * *'
    command:
    - date

replicaCount: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# startCommand:
#   command:
#     - sh
#     - -c
#   args:
#     - bash

nameOverride: ""
fullnameOverride: ""

rbac:
  create: true
  annotations: {}
    # eks.amazonaws.com/role-arn: arn:aws:iam::<account_id>:role/<company_name>-<env>-<role_name>"
  name: ""

service:
  name: http
  type: ClusterIP
  port: 80
  containerPort: 9000
  containerGrpcPort: 10000

env: {}

resources:
  limits:
    cpu: 200m
    memory: 200Mi
  requests:
    cpu: 100m
    memory: 100Mi

# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

no_healthcheck: true

kongIngress:
  enabled: true
  class: "kong"
  mode: "http"
  routeMap:
  - name: health
    overridePath: /api/v1/appname/health
    upstream_path: /health
  - name: public
    overridePath: /api/v1/appname/public
    upstream_path: /public
    plugins:
    - cors
    cors:
      origins:
      - "*"
      methods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
  ingress_config: {}

kongIngressConfig:
  domains:
    - gw-dev.example.vn

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
