vpc:
  cidr: "10.10.0.0/16"
  zones: ["us-east-1a", "us-east-1b", "us-east-1c"]
  public_subnets: ["10.10.10.0/24", "10.10.20.0/24", "10.10.30.0/24"]
  private_subnets: ["10.10.110.0/24", "10.10.120.0/24", "10.10.130.0/24"]
  database_subnets: ["10.10.210.0/24", "10.10.220.0/24"]
  private_subnet_tags:
    "kubernetes.io/role/internal-elb": 1
  public_subnet_tags:
    "kubernetes.io/role/elb": 1
  single_nat_gateway: true

ec2: 
  # gitlab:
  #   instance_type: t3a.medium
  #   ami: ami-0103953a003440c37
  #   init_script: script/gitlab-setup.sh
  #   create_key: true
  #   zone: "us-east-1b"
  #   vpc_security_group_ids: ["ssh-access", "http-access"]
  #   root_block_device:
  #     - volume_size: 20
  #       delete_on_termination: false
  vault:
    instance_type: t4g.small
    ami: ami-0e879a1b306fffb22
    init_script: script/vault-setup.sh
    create_key: true
    zone: "us-east-1b"
    vpc_security_group_ids: ["ssh-access", "http-access"]
    root_block_device:
      - volume_size: 20
        delete_on_termination: false

sg:
  ssh-access:
    description: "Allow SSH access"
    ingress_with_cidr_blocks:
      - from_port  : 22
        to_port    : 22
        protocol   : "tcp"
        description: "SSH access from anywhere"
        cidr_blocks: "0.0.0.0/0"
  http-access:
    description: "Allow HTTP/HTTPS access"
    ingress_with_cidr_blocks:
      - from_port  : 80
        to_port    : 80
        protocol   : "tcp"
        description: "HTTP access from anywhere"
        cidr_blocks: "0.0.0.0/0"
      - from_port  : 443
        to_port    : 443
        protocol   : "tcp"
        description: "HTTPS access from anywhere"
        cidr_blocks: "0.0.0.0/0"
  # eks-access-rds:
  #   description: "Allow EKS access RDS"
  #   ingress_with_cidr_blocks:
  #     - from_port  : 3306
  #       to_port    : 3306
  #       protocol   : "tcp"
  #       description: "Eks node group access rds (mysql)"
  #       cidr_blocks: "10.10.0.0/16"
  #     - from_port  : 5432
  #       to_port    : 5432
  #       protocol   : "tcp"
  #       description: "Eks node group access rds (postgresql)"
  #       cidr_blocks: "10.10.0.0/16"

# rds:
#   postgres:
#     engine: "postgres"
#     engine_version: "16"
#     instance_class: "db.t4g.micro"
#     security_groups: ["eks-access-rds"]

# eks:
#   version: "1.30"
#   cluster_service_ipv4_cidr: "10.20.0.0/16"

#   kms_key_administrators: []

#   access_entries:
#     admin:
#       kubernetes_groups: []
#       principal_arn: "arn:aws:iam::590183940398:user/cloud_user"
#       user_name: "cloud_user"

#   eks_managed_node_groups:
#     group_1:
#       instance_types: ["t4g.small"]
#       capacity_type: "ON_DEMAND"
#       ami_type: "AL2023_ARM_64_STANDARD"
#       min_size: 1
#       desired_size: 1
#       max_size: 10
#       zone: "us-east-1a"
#       iam_role_additional_policies:
#         evs_csi_driver_policy: "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy"
#         cloudwach_log_policy: "arn:aws:iam::aws:policy/service-role/AWSTransferLoggingAccess"
#         # ssm_policy: "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
#       labels:
#         name: "default-node"
#         # role: "build"
#       taints: []
#       #   - key: "role"
#       #     value: "build"
#       #     effect: "NO_SCHEDULE"
#       block_device_mappings:
#         xvda:
#           device_name: "/dev/xvda"
#           ebs:
#             volume_size: 75
#             volume_type: gp3
#             delete_on_termination: true
#       tags:
#         k8s.io/cluster-autoscaler/enabled: 1
    # group_2:
    #   instance_types: ["t4g.small"]
    #   capacity_type: "ON_DEMAND"
    #   ami_type: "AL2023_ARM_64_STANDARD"
    #   min_size: 1
    #   desired_size: 1
    #   max_size: 10
    #   zone: "us-east-1b"
    #   iam_role_additional_policies:
    #     evs_csi_driver_policy: "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy"
    #     cloudwach_log_policy: "arn:aws:iam::aws:policy/service-role/AWSTransferLoggingAccess"
    #     # ssm_policy: "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
    #   labels:
    #     name: "default-node"
    #     # role: "build"
    #   taints: []
    #   #   - key: "role"
    #   #     value: "build"
    #   #     effect: "NO_SCHEDULE"
    #   block_device_mappings:
    #     xvda:
    #       device_name: "/dev/xvda"
    #       ebs:
    #         volume_size: 75
    #         volume_type: gp3
    #         delete_on_termination: true
    #   tags:
    #     k8s.io/cluster-autoscaler/enabled: 1
    